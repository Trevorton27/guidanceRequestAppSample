{"version":3,"sources":["Wizard.js","App.js","reportWebVitals.js","index.js"],"names":["steps","stepName","component","props","state","firstStep","React","Component","secondStep","thirdStep","Wizard","allStates","console","log","Container","fluid","style","marginTop","Row","Col","xs","md","className","navSteps","title","description","headerTextCenter","validate","color","finishButtonClick","this","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA+CIA,EAAQ,CAEV,CAAEC,SAAU,QAASC,U,kDA1CrB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,mBAHI,E,0CAMnB,WACE,OAAO,qD,GARaC,IAAMC,YA6C5B,CAAEN,SAAU,SAAUC,U,kDAjCtB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXI,WAAY,oBAHG,E,+CAMnB,WAGE,OAAO,I,oBAIT,WACE,OAAO,sD,GAfcF,IAAMC,YAoC7B,CAAEN,SAAU,QAASC,U,kDAjBrB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXK,UAAW,mBAHI,E,0CAMnB,WACE,OAAO,qD,GARaH,IAAMC,aA+CfG,E,uKAzBb,SAAkBC,GAChBC,QAAQC,IAAIF,K,oBAEd,WACE,OACE,cAACG,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAAEC,UAAW,QAArC,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,UAAU,kBAA9B,SACE,cAAC,IAAD,CACEtB,MAAOA,EACPuB,UAAQ,EACRC,MAAM,eACNC,YAAY,uFACZC,kBAAgB,EAChBC,UAAQ,EACRC,MAAM,UACNC,kBAAmBC,KAAKD,8B,GAjBjBvB,IAAMC,W,MCzCZwB,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCESU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3415dc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactWizard from 'react-bootstrap-wizard';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass FirstStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstStep: 'first step here'\r\n    };\r\n  }\r\n  render() {\r\n    return <div>Hey from First</div>;\r\n  }\r\n}\r\nclass SecondStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      secondStep: 'second step here'\r\n    };\r\n  }\r\n  isValidated() {\r\n    // do some validations\r\n    // decide if you will\r\n    return true;\r\n    // or you will\r\n    // return false;\r\n  }\r\n  render() {\r\n    return <div>Hey from Second</div>;\r\n  }\r\n}\r\nclass ThirdStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      thirdStep: 'third step here'\r\n    };\r\n  }\r\n  render() {\r\n    return <div>Hey from Third</div>;\r\n  }\r\n}\r\n\r\nvar steps = [\r\n  // this step hasn't got a isValidated() function, so it will be considered to be true\r\n  { stepName: 'First', component: FirstStep },\r\n  // this step will be validated to false\r\n  { stepName: 'Second', component: SecondStep },\r\n  // this step will never be reachable because of the seconds isValidated() steps function that will always return false\r\n  { stepName: 'Third', component: ThirdStep }\r\n];\r\n\r\nclass Wizard extends React.Component {\r\n  finishButtonClick(allStates) {\r\n    console.log(allStates);\r\n  }\r\n  render() {\r\n    return (\r\n      <Container fluid style={{ marginTop: '15px' }}>\r\n        <Row>\r\n          <Col xs={12} md={6} className='mr-auto ml-auto'>\r\n            <ReactWizard\r\n              steps={steps}\r\n              navSteps\r\n              title='react-wizard'\r\n              description='This will help you split a complicated flow or a complicated form in multiple steps.'\r\n              headerTextCenter\r\n              validate\r\n              color='primary'\r\n              finishButtonClick={this.finishButtonClick}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wizard;\r\n","import React from 'react';\n// import ReactDOM from 'react-dom';\n// import ReactWizard from 'react-bootstrap-wizard';\n// import { Container, Row, Col } from 'reactstrap';\nimport Wizard from './Wizard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Wizard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}